// ============================================
// –ü–†–ò–ú–ï–† –ü–†–ê–í–ò–õ–¨–ù–û–ì–û –î–û–ë–ê–í–õ–ï–ù–ò–Ø –ò–ó–î–ï–õ–ò–Ø
// ============================================

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–∑–¥–µ–ª–∏—è
 */
async function addCustomProduct(productData) {
    try {
        const response = await fetch('save_data.php', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                add_custom_product: {
                    name: productData.name,
                    complexity: productData.complexity || '',
                    margin: productData.margin || '',
                    demand: productData.demand || '',
                    time: productData.time || ''
                }
            })
        });

        const result = await response.json();

        if (result.success) {
            console.log('‚úÖ –ò–∑–¥–µ–ª–∏–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ!');
            // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
            await loadDashboardData();
            return true;
        } else {
            console.error('‚ùå –û—à–∏–±–∫–∞:', result.error);
            alert('–û—à–∏–±–∫–∞: ' + result.error);
            return false;
        }
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏:', error);
        alert('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: ' + error.message);
        return false;
    }
}

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –í–°–ï–• –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∏–∑–¥–µ–ª–∏–π
 * –í–ê–ñ–ù–û: –ü—Ä–∏ –ª—é–±–æ–º –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –Ω—É–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –í–°–ï selected_products!
 */
async function saveAllSelectedProducts(selectedProducts, customProducts) {
    try {
        const response = await fetch('save_data.php', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                selected_products: selectedProducts,  // –ú–∞—Å—Å–∏–≤ –∏–º–µ–Ω –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∏–∑–¥–µ–ª–∏–π
                custom_products: customProducts       // –ú–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –∏–∑–¥–µ–ª–∏–π
            })
        });

        const result = await response.json();

        if (result.success) {
            console.log('‚úÖ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!', result.timestamp);
            return true;
        } else {
            console.error('‚ùå –û—à–∏–±–∫–∞:', result.error);
            return false;
        }
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏:', error);
        return false;
    }
}

/**
 * –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
 */
async function loadDashboardData() {
    try {
        const response = await fetch('save_data.php');
        const data = await response.json();

        console.log('üìä –ó–∞–≥—Ä—É–∂–µ–Ω–æ –¥–∞–Ω–Ω—ã—Ö:');
        console.log('- –í—ã–±—Ä–∞–Ω–Ω—ã—Ö –∏–∑–¥–µ–ª–∏–π:', data.selected_products.length);
        console.log('- –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –∏–∑–¥–µ–ª–∏–π:', data.custom_products.length);
        console.log('- –£–¥–∞–ª—ë–Ω–Ω—ã—Ö –∏–∑–¥–µ–ª–∏–π:', data.deleted_products.length);

        return data;
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏:', error);
        return null;
    }
}

/**
 * –§—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è –∏–∑–¥–µ–ª–∏—è
 */
async function deleteProduct(productName) {
    try {
        const response = await fetch('save_data.php', {
            method: 'DELETE',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                name: productName
            })
        });

        const result = await response.json();

        if (result.success) {
            console.log('‚úÖ –ò–∑–¥–µ–ª–∏–µ —É–¥–∞–ª–µ–Ω–æ:', productName);
            await loadDashboardData();
            return true;
        } else {
            console.error('‚ùå –û—à–∏–±–∫–∞:', result.error);
            return false;
        }
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏:', error);
        return false;
    }
}

/**
 * –§—É–Ω–∫—Ü–∏—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∏–∑–¥–µ–ª–∏—è
 */
async function restoreProduct(productName) {
    try {
        const response = await fetch('save_data.php', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                restore_product: productName
            })
        });

        const result = await response.json();

        if (result.success) {
            console.log('‚úÖ –ò–∑–¥–µ–ª–∏–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ:', productName);
            await loadDashboardData();
            return true;
        } else {
            console.error('‚ùå –û—à–∏–±–∫–∞:', result.error);
            return false;
        }
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏:', error);
        return false;
    }
}

// ============================================
// –ü–†–ò–ú–ï–† –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Ø
// ============================================

// –ü—Ä–∏–º–µ—Ä 1: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∏–∑–¥–µ–ª–∏—è
async function exampleAddProduct() {
    await addCustomProduct({
        name: '–ù–æ–≤–æ–µ –∏–∑–¥–µ–ª–∏–µ',
        complexity: '–°—Ä–µ–¥–Ω—è—è',
        margin: '–í—ã—Å–æ–∫–∞—è',
        demand: '–í—ã—Å–æ–∫–∏–π',
        time: '3-5 –¥–Ω–µ–π'
    });
}

// –ü—Ä–∏–º–µ—Ä 2: –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –≤—ã–±–æ—Ä–µ –∏–∑–¥–µ–ª–∏–π
async function exampleSaveSelection() {
    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ
    const data = await loadDashboardData();

    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ –∏–∑–¥–µ–ª–∏–µ –≤ –≤—ã–±—Ä–∞–Ω–Ω—ã–µ
    if (!data.selected_products.includes('–ù–æ–≤–æ–µ –∏–∑–¥–µ–ª–∏–µ')) {
        data.selected_products.push('–ù–æ–≤–æ–µ –∏–∑–¥–µ–ª–∏–µ');
    }

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º
    await saveAllSelectedProducts(data.selected_products, data.custom_products);
}

// ============================================
// –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê
// ============================================

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
 */
async function diagnosticCheck() {
    console.log('üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –î–ê–ù–ù–´–•');
    console.log('='.repeat(50));

    const data = await loadDashboardData();

    if (!data) {
        console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ!');
        return;
    }

    console.log('üìã –í–´–ë–†–ê–ù–ù–´–ï –ò–ó–î–ï–õ–ò–Ø (selected_products):');
    data.selected_products.forEach((name, i) => {
        console.log(`  ${i + 1}. ${name}`);
    });

    console.log('\nüîß –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨–°–ö–ò–ï –ò–ó–î–ï–õ–ò–Ø (custom_products):');
    data.custom_products.forEach((product, i) => {
        console.log(`  ${i + 1}. ${product.name}`);
        console.log(`     - –°–ª–æ–∂–Ω–æ—Å—Ç—å: ${product.complexity}`);
        console.log(`     - –ú–∞—Ä–∂–∞: ${product.margin}`);
        console.log(`     - –°–ø—Ä–æ—Å: ${product.demand}`);
    });

    console.log('\nüóëÔ∏è –£–î–ê–õ–Å–ù–ù–´–ï –ò–ó–î–ï–õ–ò–Ø (deleted_products):');
    data.deleted_products.forEach((product, i) => {
        console.log(`  ${i + 1}. ${product.name}`);
    });

    console.log('\n‚è∞ –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ:', data.last_updated);
    console.log('='.repeat(50));

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è
    console.log('\n‚ö†Ô∏è –ü–†–û–í–ï–†–ö–ê –¶–ï–õ–û–°–¢–ù–û–°–¢–ò:');

    const customNames = data.custom_products.map(p => p.name);
    const missingInSelected = customNames.filter(name => !data.selected_products.includes(name));

    if (missingInSelected.length > 0) {
        console.warn('‚ö†Ô∏è –≠—Ç–∏ –∏–∑–¥–µ–ª–∏—è –µ—Å—Ç—å –≤ custom_products, –Ω–æ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤ selected_products:');
        missingInSelected.forEach(name => console.warn(`   - ${name}`));
        console.log('\nüí° –†–ï–®–ï–ù–ò–ï: –î–æ–±–∞–≤—å—Ç–µ —ç—Ç–∏ –∏–∑–¥–µ–ª–∏—è –≤ selected_products!');
    } else {
        console.log('‚úÖ –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∏–∑–¥–µ–ª–∏—è –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö!');
    }
}

// –ó–∞–ø—É—Å–∫ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
// diagnosticCheck();