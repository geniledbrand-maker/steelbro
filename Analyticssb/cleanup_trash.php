<?php
/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –ü–û–õ–ù–û–ô –æ—á–∏—Å—Ç–∫–∏ –∫–æ—Ä–∑–∏–Ω—ã (deleted_products)
 * –í–µ—Ä—Å–∏—è 4.0 - —É–¥–∞–ª—è–µ—Ç –í–°–Å –∏–∑ deleted_products
 */

header('Content-Type: text/html; charset=utf-8');

echo "<h1>üßπ –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã</h1>";
echo "<style>
body{font-family:system-ui;padding:20px;line-height:1.8;max-width:900px;}
ul{background:#f5f5f5;padding:15px;border-radius:8px;margin:10px 0;}
.success{color:#10b981;font-weight:bold;}
.error{color:#ef4444;font-weight:bold;}
.warning{color:#f59e0b;font-weight:bold;}
h2{margin-top:30px;border-bottom:2px solid #e5e7eb;padding-bottom:10px;}
.btn{background:#3b82f6;color:white;padding:12px 24px;border:none;border-radius:8px;cursor:pointer;font-size:16px;font-weight:600;text-decoration:none;display:inline-block;}
.btn:hover{background:#2563eb;}
.btn-danger{background:#ef4444;}
.btn-danger:hover{background:#dc2626;}
</style>";

// ========== –ü–†–ê–í–ò–õ–¨–ù–û–ï –ò–ú–Ø –§–ê–ô–õ–ê ==========
$data_file = 'dashboard_data.json';

echo "<h2>üîç –®–∞–≥ 1: –ü–æ–∏—Å–∫ —Ñ–∞–π–ª–∞ –¥–∞–Ω–Ω—ã—Ö</h2>";

if (!file_exists($data_file)) {
    die("<p class='error'>‚ùå –§–∞–π–ª $data_file –Ω–µ –Ω–∞–π–¥–µ–Ω!</p>");
}

echo "<p class='success'>‚úÖ –ù–∞–π–¥–µ–Ω —Ñ–∞–π–ª: <strong>$data_file</strong></p>";

// ========== –®–ê–ì 2: –ß–¢–ï–ù–ò–ï –î–ê–ù–ù–´–• ==========
echo "<h2>üìñ –®–∞–≥ 2: –ß—Ç–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö</h2>";

$json_content = file_get_contents($data_file);
$data = json_decode($json_content, true);

if (!$data) {
    die("<p class='error'>‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è JSON!</p>");
}

echo "<p class='success'>‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã</p>";

// ========== –®–ê–ì 3: –†–ï–ó–ï–†–í–ù–ê–Ø –ö–û–ü–ò–Ø ==========
echo "<h2>üíæ –®–∞–≥ 3: –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏</h2>";

$backup_file = "dashboard_data_backup_" . date('Y-m-d_H-i-s') . ".json";
file_put_contents($backup_file, $json_content);
echo "<p class='success'>‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è: <strong>$backup_file</strong></p>";

// ========== –®–ê–ì 4: –ê–ù–ê–õ–ò–ó ==========
echo "<h2>üìä –®–∞–≥ 4: –ê–Ω–∞–ª–∏–∑ –∫–æ—Ä–∑–∏–Ω—ã (deleted_products)</h2>";

$deleted_before = count($data['deleted_products'] ?? []);

echo "<p>–í –∫–æ—Ä–∑–∏–Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è: <strong class='warning'>$deleted_before</strong> –∏–∑–¥–µ–ª–∏–π</p>";

if ($deleted_before === 0) {
    echo "<p class='success'>‚ú® –ö–æ—Ä–∑–∏–Ω–∞ —É–∂–µ –ø—É—Å—Ç–∞!</p>";
    echo "<br><a href='index.html' class='btn'>‚Üê –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –ø–∞–Ω–µ–ª—å</a>";
    exit;
}

// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —á—Ç–æ –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–æ
echo "<h3>üóëÔ∏è –ò–∑–¥–µ–ª–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã:</h3>";
echo "<ol style='background:white;padding:20px;border-radius:8px;'>";
foreach ($data['deleted_products'] as $p) {
    echo "<li><strong>" . htmlspecialchars($p['name']) . "</strong> ";
    echo "(" . ($p['complexity'] ?? '‚Äî') . ", ";
    echo ($p['margin'] ?? '‚Äî') . ", ";
    echo ($p['demand'] ?? '‚Äî') . ")</li>";
}
echo "</ol>";

// ========== –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–ò–ï ==========
if (!isset($_GET['confirm'])) {
    echo "<div style='margin:30px 0;padding:20px;background:#fef3c7;border-left:4px solid #f59e0b;border-radius:8px;'>";
    echo "<p style='margin:0 0 15px 0;font-size:18px;font-weight:bold;'>‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï!</p>";
    echo "<p style='margin:0 0 15px 0;'>–í—ã —Å–æ–±–∏—Ä–∞–µ—Ç–µ—Å—å —É–¥–∞–ª–∏—Ç—å <strong>$deleted_before –∏–∑–¥–µ–ª–∏–π</strong> –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã –ù–ê–í–°–ï–ì–î–ê.</p>";
    echo "<p style='margin:0;'>–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å!</p>";
    echo "</div>";

    echo "<div style='display:flex;gap:12px;'>";
    echo "<a href='?confirm=yes' class='btn btn-danger'>üóëÔ∏è –î–∞, —É–¥–∞–ª–∏—Ç—å –≤—Å—ë –Ω–∞–≤—Å–µ–≥–¥–∞</a>";
    echo "<a href='index.html' class='btn'>‚Üê –û—Ç–º–µ–Ω–∞</a>";
    echo "</div>";
    exit;
}

// ========== –®–ê–ì 5: –û–ß–ò–°–¢–ö–ê ==========
echo "<h2>üßπ –®–∞–≥ 5: –û—á–∏—Å—Ç–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã</h2>";

// –¢–∞–∫–∂–µ –æ—á–∏—â–∞–µ–º –º—É—Å–æ—Ä –∏–∑ custom_products
$trash_names = ['1', '5', '7', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20'];

$custom_before = count($data['custom_products'] ?? []);

// –£–¥–∞–ª—è–µ–º –º—É—Å–æ—Ä –∏–∑ custom_products
$data['custom_products'] = array_values(array_filter($data['custom_products'] ?? [], function($p) use ($trash_names) {
    return !in_array($p['name'], $trash_names);
}));

// –ü–û–õ–ù–û–°–¢–¨–Æ –û–ß–ò–©–ê–ï–ú deleted_products
$data['deleted_products'] = [];

// –£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã –∏–∑ custom_products
$unique = [];
$seen = [];
foreach ($data['custom_products'] as $p) {
    if (!in_array($p['name'], $seen)) {
        $unique[] = $p;
        $seen[] = $p['name'];
    }
}
$data['custom_products'] = array_values($unique);

// –û—á–∏—â–∞–µ–º selected_products –æ—Ç –º—É—Å–æ—Ä–∞
$all_names = array_column($data['custom_products'], 'name');
$data['selected_products'] = array_values(array_filter($data['selected_products'] ?? [], function($name) use ($all_names, $trash_names) {
    return !in_array($name, $trash_names) && (in_array($name, $all_names) || is_numeric($name));
}));

echo "<p class='success'>‚úÖ –ö–æ—Ä–∑–∏–Ω–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—á–∏—â–µ–Ω–∞</p>";
echo "<p class='success'>‚úÖ –ú—É—Å–æ—Ä–Ω—ã–µ –∏–∑–¥–µ–ª–∏—è —É–¥–∞–ª–µ–Ω—ã –∏–∑ custom_products</p>";
echo "<p class='success'>‚úÖ –î—É–±–ª–∏–∫–∞—Ç—ã —É–¥–∞–ª–µ–Ω—ã</p>";

// ========== –®–ê–ì 6: –°–û–•–†–ê–ù–ï–ù–ò–ï ==========
echo "<h2>üíæ –®–∞–≥ 6: –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π</h2>";

$result = file_put_contents($data_file, json_encode($data, JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE));

if ($result === false) {
    die("<p class='error'>‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–∞!</p>");
}

echo "<p class='success'>‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: <strong>$data_file</strong></p>";

// ========== –®–ê–ì 7: –†–ï–ó–£–õ–¨–¢–ê–¢ ==========
echo "<h2>‚úÖ –®–∞–≥ 7: –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç</h2>";

$custom_after = count($data['custom_products']);
$deleted_after = count($data['deleted_products']);

$custom_removed = $custom_before - $custom_after;
$deleted_removed = $deleted_before - $deleted_after;

echo "<ul>";
echo "<li><strong>Custom Products:</strong> $custom_after —à—Ç. ";
if ($custom_removed > 0) {
    echo "<span style='color:#ef4444;'>(—É–¥–∞–ª–µ–Ω–æ: $custom_removed)</span>";
}
echo "</li>";

echo "<li><strong>Deleted Products (–∫–æ—Ä–∑–∏–Ω–∞):</strong> $deleted_after —à—Ç. ";
echo "<span class='success'>(—É–¥–∞–ª–µ–Ω–æ: $deleted_removed) ‚ú® –ö–û–†–ó–ò–ù–ê –ü–£–°–¢–ê!</span>";
echo "</li>";
echo "</ul>";

$total_removed = $custom_removed + $deleted_removed;
echo "<p style='font-size:18px;color:#10b981;font-weight:bold;'>üéâ –í—Å–µ–≥–æ —É–¥–∞–ª–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: $total_removed</p>";

// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –∏–∑–¥–µ–ª–∏—è
echo "<h3>üìã –û—Å—Ç–∞–≤—à–∏–µ—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∏–∑–¥–µ–ª–∏—è ($custom_after —à—Ç.):</h3>";
if (empty($data['custom_products'])) {
    echo "<p>–ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –∏–∑–¥–µ–ª–∏–π</p>";
} else {
    echo "<ol style='background:white;padding:20px;border-radius:8px;'>";
    foreach ($data['custom_products'] as $p) {
        echo "<li><strong>" . htmlspecialchars($p['name']) . "</strong> ‚Äî ";
        echo "–°–ª–æ–∂–Ω–æ—Å—Ç—å: " . ($p['complexity'] ?? '‚Äî') . ", ";
        echo "–ú–∞—Ä–∂–∞: " . ($p['margin'] ?? '‚Äî') . ", ";
        echo "–°–ø—Ä–æ—Å: " . ($p['demand'] ?? '‚Äî');
        echo "</li>";
    }
    echo "</ol>";
}

// ========== –§–ò–ù–ê–õ ==========
echo "<hr style='margin:40px 0;'>";
echo "<div style='background:#10b981;color:white;padding:20px;border-radius:12px;text-align:center;'>";
echo "<h2 style='margin:0;border:none;color:white;'>üéâ –ö–æ—Ä–∑–∏–Ω–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—á–∏—â–µ–Ω–∞!</h2>";
echo "</div>";

echo "<div style='margin-top:30px;'>";
echo "<h3>üìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:</h3>";
echo "<ol style='font-size:16px;line-height:2;'>";
echo "<li>–ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ <strong>–ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è</strong></li>";
echo "<li>–ù–∞–∂–º–∏—Ç–µ <strong>Ctrl+Shift+R</strong> (–ø–æ–ª–Ω–∞—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞)</li>";
echo "<li>–û—Ç–∫—Ä–æ–π—Ç–µ –≤–∫–ª–∞–¥–∫—É <strong>\"–£–¥–∞–ª—ë–Ω–Ω—ã–µ –∏–∑–¥–µ–ª–∏—è\"</strong></li>";
echo "<li>–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞ ‚úÖ</li>";
echo "</ol>";
echo "</div>";

echo "<div style='text-align:center;margin-top:30px;'>";
echo "<a href='index.html' class='btn'>‚Üê –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –ø–∞–Ω–µ–ª—å</a>";
echo "</div>";

echo "<div style='margin-top:30px;padding:15px;background:#fef3c7;border-radius:8px;border-left:4px solid #f59e0b;'>";
echo "<p style='margin:0;'><strong>üí° –°–æ–≤–µ—Ç:</strong> –§–∞–π–ª —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ (<code>$backup_file</code>) —Å–æ—Ö—Ä–∞–Ω—ë–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ. –ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –≤—ã –º–æ–∂–µ—Ç–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ –Ω–µ–≥–æ.</p>";
echo "</div>";
?>