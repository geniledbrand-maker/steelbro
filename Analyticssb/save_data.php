<?php
/**
 * API –¥–ª—è –ø–∞–Ω–µ–ª–∏ Analyticssb
 * –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ, –∑–∞–≥—Ä—É–∑–∫—É, —É–¥–∞–ª–µ–Ω–∏–µ –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑–¥–µ–ª–∏–π.
 * –§–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞: dashboard_data.json
 * --------------------------------------
 * –ú–µ—Ç–æ–¥—ã:
 *  GET     ‚Äî –ø–æ–ª—É—á–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ
 *  POST    ‚Äî —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å/–≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–∑–¥–µ–ª–∏—è
 *  DELETE  ‚Äî —É–¥–∞–ª–∏—Ç—å –∏–∑–¥–µ–ª–∏–µ (–≤ –∫–æ—Ä–∑–∏–Ω—É)
 *  OPTIONS ‚Äî preflight –¥–ª—è CORS
 */

header('Content-Type: application/json; charset=utf-8');
header('Access-Control-Allow-Origin: *');
header('Access-Control-Allow-Methods: GET, POST, DELETE, OPTIONS');
header('Access-Control-Allow-Headers: Content-Type');

$dataFile = __DIR__ . '/dashboard_data.json';

/**
 * –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –æ—Ç–≤–µ—Ç JSON
 */
function sendJson($data, $status = 200)
{
    http_response_code($status);
    echo json_encode($data, JSON_UNESCAPED_UNICODE | JSON_PRETTY_PRINT);
    exit;
}

/**
 * –ì—Ä—É–∑–∏–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
 */
function loadData($dataFile)
{
    if (!file_exists($dataFile)) {
        return [
            'selected_products' => [],
            'custom_products' => [],
            'deleted_products' => [],
            'last_updated' => date('Y-m-d H:i')
        ];
    }

    $json = json_decode(file_get_contents($dataFile), true);
    if (!is_array($json)) $json = [];

    // –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö –∫–ª—é—á–µ–π
    foreach (['selected_products', 'custom_products', 'deleted_products'] as $key) {
        if (!isset($json[$key]) || !is_array($json[$key])) {
            $json[$key] = [];
        }
    }

    if (empty($json['last_updated'])) {
        $json['last_updated'] = date('Y-m-d H:i');
    }

    return $json;
}

/**
 * –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª —Å –º–µ—Ç–∫–æ–π –≤—Ä–µ–º–µ–Ω–∏
 */
function saveData($dataFile, $data)
{
    $data['last_updated'] = date('Y-m-d H:i');

    // –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –µ—Å–ª–∏ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if (file_exists($dataFile)) {
        $backupFile = $dataFile . '.backup';
        copy($dataFile, $backupFile);
    }

    $result = file_put_contents($dataFile, json_encode($data, JSON_UNESCAPED_UNICODE | JSON_PRETTY_PRINT));

    if ($result === false) {
        sendJson(['success' => false, 'error' => '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ'], 500);
    }

    return $data['last_updated'];
}

/**
 * Preflight –¥–ª—è CORS
 */
if ($_SERVER['REQUEST_METHOD'] === 'OPTIONS') {
    http_response_code(200);
    exit;
}

$data = loadData($dataFile);

// ====================================================
// GET ‚Äî –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
// ====================================================
if ($_SERVER['REQUEST_METHOD'] === 'GET') {
    sendJson($data);
}

// ====================================================
// POST ‚Äî —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–ª–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ
// ====================================================
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $input = json_decode(file_get_contents('php://input'), true);

    if (!$input) {
        sendJson(['success' => false, 'error' => '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π JSON'], 400);
    }

    // === üî• –ü–û–°–¢–û–Ø–ù–ù–û–ï –£–î–ê–õ–ï–ù–ò–ï –û–î–ù–û–ì–û –ò–ó–î–ï–õ–ò–Ø –ò–ó –ö–û–†–ó–ò–ù–´ ===
    if (isset($input['permanent_delete_single'])) {
        $name_to_delete = $input['permanent_delete_single'];

        error_log("–£–¥–∞–ª–µ–Ω–∏–µ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã: " . $name_to_delete); // –û—Ç–ª–∞–¥–∫–∞

        // –°—á–∏—Ç–∞–µ–º —Å–∫–æ–ª—å–∫–æ –±—ã–ª–æ
        $deleted_before = count($data['deleted_products']);

        // –£–¥–∞–ª—è–µ–º –∏–∑–¥–µ–ª–∏–µ –∏–∑ deleted_products
        $data['deleted_products'] = array_values(array_filter(
            $data['deleted_products'],
            function($product) use ($name_to_delete) {
                return $product['name'] !== $name_to_delete;
            }
        ));

        $deleted_after = count($data['deleted_products']);
        $removed = $deleted_before - $deleted_after;

        error_log("–ë—ã–ª–æ: $deleted_before, –°—Ç–∞–ª–æ: $deleted_after, –£–¥–∞–ª–µ–Ω–æ: $removed"); // –û—Ç–ª–∞–¥–∫–∞

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º
        $timestamp = saveData($dataFile, $data);

        sendJson([
            'success' => true,
            'message' => '–ò–∑–¥–µ–ª–∏–µ —É–¥–∞–ª–µ–Ω–æ –Ω–∞–≤—Å–µ–≥–¥–∞',
            'removed_count' => $removed,
            'timestamp' => $timestamp
        ]);
    }

    // === –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï ===
    // –û–±–Ω–æ–≤–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –∏–∑–¥–µ–ª–∏—è (—ç—Ç–æ –≥–ª–∞–≤–Ω–æ–µ!)
    if (isset($input['selected_products'])) {
        $data['selected_products'] = $input['selected_products'];
    }

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∏–∑–¥–µ–ª–∏—è
    if (isset($input['custom_products'])) {
        $data['custom_products'] = $input['custom_products'];
    }

    // === –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–∑–¥–µ–ª–∏—è ===
    if (isset($input['add_custom_product'])) {
        $newProduct = $input['add_custom_product'];

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
        if (empty($newProduct['name'])) {
            sendJson(['success' => false, 'error' => '–ù–µ —É–∫–∞–∑–∞–Ω–æ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–∑–¥–µ–ª–∏—è'], 400);
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Ç–∞–∫–æ–µ –∏–∑–¥–µ–ª–∏–µ
        $exists = false;
        foreach ($data['custom_products'] as $p) {
            if ($p['name'] === $newProduct['name']) {
                $exists = true;
                break;
            }
        }

        if ($exists) {
            sendJson(['success' => false, 'error' => '–ò–∑–¥–µ–ª–∏–µ —Å —Ç–∞–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç'], 400);
        }

// –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ –∏–∑–¥–µ–ª–∏–µ
        $data['custom_products'][] = $newProduct;


    // === –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —É–¥–∞–ª—ë–Ω–Ω–æ–≥–æ –∏–∑–¥–µ–ª–∏—è ===
    if (isset($input['restore_product'])) {
        $restoreName = $input['restore_product'];
        $restored = null;

        foreach ($data['deleted_products'] as $i => $p) {
            if ($p['name'] === $restoreName) {
                $restored = $p;
                unset($data['deleted_products'][$i]);
                break;
            }
        }

        if ($restored) {
            $data['deleted_products'] = array_values($data['deleted_products']);
            $data['custom_products'][] = $restored;

            // –í–ê–ñ–ù–û: –¢–∞–∫–∂–µ –¥–æ–±–∞–≤–ª—è–µ–º –≤ selected_products!
            if (!in_array($restored['name'], $data['selected_products'])) {
            }
        } else {
            sendJson(['success' => false, 'error' => '–ù–µ –Ω–∞–π–¥–µ–Ω–æ –∏–∑–¥–µ–ª–∏–µ –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è'], 404);
        }
    }

    $timestamp = saveData($dataFile, $data);
    sendJson([
        'success' => true,
        'timestamp' => $timestamp,
        'message' => '–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã'
    ]);
}

// ====================================================
// DELETE ‚Äî —É–¥–∞–ª–µ–Ω–∏–µ –∏–∑–¥–µ–ª–∏—è
// ====================================================
if ($_SERVER['REQUEST_METHOD'] === 'DELETE') {
    $input = json_decode(file_get_contents('php://input'), true);
    $name = trim($input['name'] ?? '');

    if ($name === '') {
        sendJson(['success' => false, 'error' => '–ù–µ —É–∫–∞–∑–∞–Ω–æ –∏–º—è –∏–∑–¥–µ–ª–∏—è'], 400);
    }

    $found = false;
    $deleted = null;

    // 1Ô∏è‚É£ –ò—â–µ–º –≤ custom_products
    foreach ($data['custom_products'] as $i => $product) {
        if ($product['name'] === $name) {
            $deleted = $product;
            unset($data['custom_products'][$i]);
            $found = true;
            break;
        }
    }

    // 2Ô∏è‚É£ –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ ‚Äî –¥–æ–±–∞–≤–∏–º –±–∞–∑–æ–≤—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É
    if (!$found) {
        $deleted = [
            'name' => $name,
            'complexity' => '',
            'margin' => '',
            'demand' => '',
            'time' => ''
        ];
    }

    // 3Ô∏è‚É£ –í–ê–ñ–ù–û: –£–¥–∞–ª—è–µ–º —Ç–∞–∫–∂–µ –∏–∑ selected_products!
    $data['selected_products'] = array_filter($data['selected_products'], function($prodName) use ($name) {
        return $prodName !== $name;
    });
    $data['selected_products'] = array_values($data['selected_products']);

    // –î–æ–±–∞–≤–ª—è–µ–º –≤ —É–¥–∞–ª—ë–Ω–Ω—ã–µ
    $data['deleted_products'][] = $deleted;
    $data['custom_products'] = array_values($data['custom_products']);
    $data['deleted_products'] = array_values($data['deleted_products']);

    $timestamp = saveData($dataFile, $data);
    sendJson([
        'success' => true,
        'message' => '–ò–∑–¥–µ–ª–∏–µ —É–¥–∞–ª–µ–Ω–æ (–≤ –∫–æ—Ä–∑–∏–Ω—É)',
        'timestamp' => $timestamp
    ]);
}

// ====================================================
// –ï—Å–ª–∏ –∑–∞–ø—Ä–æ—Å –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω
// ====================================================
sendJson(['success' => false, 'error' => '–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π –º–µ—Ç–æ–¥'], 405);