<?php
/**
 * –°–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏—Å—Ç–µ–º—ã –∑–∞–º–µ—Ç–æ–∫
 * –ó–∞–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç —Ñ–∞–π–ª –≤ –±—Ä–∞—É–∑–µ—Ä–µ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º
 */

header('Content-Type: text/html; charset=utf-8');
?>
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <title>–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã –∑–∞–º–µ—Ç–æ–∫</title>
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            max-width: 900px;
            margin: 40px auto;
            padding: 20px;
            background: #f5f5f5;
        }
        .check {
            background: white;
            padding: 20px;
            margin: 10px 0;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        .success { color: #10b981; font-weight: bold; }
        .error { color: #ef4444; font-weight: bold; }
        .warning { color: #f59e0b; font-weight: bold; }
        h1 { color: #1f2937; }
        h2 { color: #4b5563; margin-top: 0; }
        pre {
            background: #1f2937;
            color: #f9fafb;
            padding: 15px;
            border-radius: 6px;
            overflow-x: auto;
        }
        .badge {
            display: inline-block;
            padding: 4px 12px;
            border-radius: 12px;
            font-size: 12px;
            font-weight: bold;
            margin-left: 10px;
        }
        .badge.ok { background: #d1fae5; color: #065f46; }
        .badge.fail { background: #fee2e2; color: #991b1b; }
    </style>
</head>
<body>
<h1>üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã –∑–∞–º–µ—Ç–æ–∫</h1>

<?php
$dataDir = __DIR__ . '/data';
$notesFile = $dataDir . '/notes.json';
$errors = [];
$warnings = [];
$success = [];

// 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ data
echo '<div class="check">';
echo '<h2>1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ data/</h2>';
if (file_exists($dataDir)) {
    echo '<p class="success">‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å—É—â–µ—Å—Ç–≤—É–µ—Ç</p>';
    echo '<p>–ü—É—Ç—å: <code>' . $dataDir . '</code></p>';
    $success[] = '–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è data/ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç';
} else {
    echo '<p class="error">‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ù–ï —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!</p>';
    $errors[] = '–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è data/ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞';

    // –ü—ã—Ç–∞–µ–º—Å—è —Å–æ–∑–¥–∞—Ç—å
    if (mkdir($dataDir, 0777, true)) {
        echo '<p class="success">‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å–æ–∑–¥–∞–Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏</p>';
        $success[] = '–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è data/ —Å–æ–∑–¥–∞–Ω–∞';
    } else {
        echo '<p class="error">‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é</p>';
        $errors[] = '–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å data/';
    }
}
echo '</div>';

// 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –Ω–∞ –∑–∞–ø–∏—Å—å
echo '<div class="check">';
echo '<h2>2. –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞</h2>';
if (file_exists($dataDir)) {
    if (is_writable($dataDir)) {
        echo '<p class="success">‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –∑–∞–ø–∏—Å–∏</p>';
        $perms = substr(sprintf('%o', fileperms($dataDir)), -4);
        echo '<p>–ü—Ä–∞–≤–∞: <code>' . $perms . '</code></p>';
        $success[] = '–ü—Ä–∞–≤–∞ –Ω–∞ –∑–∞–ø–∏—Å—å –≤ data/ –µ—Å—Ç—å';
    } else {
        echo '<p class="error">‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ù–ï –¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –∑–∞–ø–∏—Å–∏!</p>';
        echo '<p>–¢–µ–∫—É—â–∏–µ –ø—Ä–∞–≤–∞: <code>' . substr(sprintf('%o', fileperms($dataDir)), -4) . '</code></p>';
        echo '<p class="warning">–í—ã–ø–æ–ª–Ω–∏—Ç–µ: <code>chmod 777 data/</code></p>';
        $errors[] = '–ù–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∑–∞–ø–∏—Å—å –≤ data/';
    }
}
echo '</div>';

// 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–∞ notes.json
echo '<div class="check">';
echo '<h2>3. –§–∞–π–ª notes.json</h2>';
if (file_exists($notesFile)) {
    echo '<p class="success">‚úÖ –§–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç</p>';
    echo '<p>–ü—É—Ç—å: <code>' . $notesFile . '</code></p>';

    $size = filesize($notesFile);
    echo '<p>–†–∞–∑–º–µ—Ä: <strong>' . $size . ' –±–∞–π—Ç</strong></p>';

    if (is_readable($notesFile)) {
        echo '<p class="success">‚úÖ –§–∞–π–ª –¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è —á—Ç–µ–Ω–∏—è</p>';

        $content = file_get_contents($notesFile);
        $notes = json_decode($content, true);

        if ($notes === null) {
            echo '<p class="error">‚ùå –û—à–∏–±–∫–∞ JSON –≤ —Ñ–∞–π–ª–µ!</p>';
            echo '<p>–û—à–∏–±–∫–∞: <code>' . json_last_error_msg() . '</code></p>';
            $errors[] = '–ù–µ–≤–∞–ª–∏–¥–Ω—ã–π JSON –≤ notes.json';
        } else {
            echo '<p class="success">‚úÖ JSON –≤–∞–ª–∏–¥–µ–Ω</p>';
            echo '<p>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–º–µ—Ç–æ–∫: <strong>' . count($notes) . '</strong></p>';
            $success[] = count($notes) . ' –∑–∞–º–µ—Ç–æ–∫ –≤ —Ñ–∞–π–ª–µ';

            if (count($notes) > 0) {
                echo '<h3>–ó–∞–º–µ—Ç–∫–∏ –≤ —Ñ–∞–π–ª–µ:</h3>';
                echo '<pre>' . json_encode($notes, JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE) . '</pre>';
            }
        }
    }

    if (is_writable($notesFile)) {
        echo '<p class="success">‚úÖ –§–∞–π–ª –¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –∑–∞–ø–∏—Å–∏</p>';
    } else {
        echo '<p class="error">‚ùå –§–∞–π–ª –ù–ï –¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –∑–∞–ø–∏—Å–∏!</p>';
        echo '<p class="warning">–í—ã–ø–æ–ª–Ω–∏—Ç–µ: <code>chmod 666 data/notes.json</code></p>';
        $errors[] = '–ù–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∑–∞–ø–∏—Å—å –≤ notes.json';
    }
} else {
    echo '<p class="warning">‚ö†Ô∏è –§–∞–π–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç (—Å–æ–∑–¥–∞—Å—Ç—Å—è –ø—Ä–∏ –ø–µ—Ä–≤–æ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏)</p>';
    $warnings[] = '–§–∞–π–ª notes.json –ø–æ–∫–∞ –Ω–µ —Å–æ–∑–¥–∞–Ω';

    // –ü—ã—Ç–∞–µ–º—Å—è —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
    if (is_writable($dataDir)) {
        if (file_put_contents($notesFile, '[]')) {
            echo '<p class="success">‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ</p>';
            $success[] = '–¢–µ—Å—Ç–æ–≤—ã–π notes.json —Å–æ–∑–¥–∞–Ω';
        } else {
            echo '<p class="error">‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª</p>';
            $errors[] = '–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å notes.json';
        }
    }
}
echo '</div>';

// 4. –¢–µ—Å—Ç API
echo '<div class="check">';
echo '<h2>4. –ü—Ä–æ–≤–µ—Ä–∫–∞ API</h2>';

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ api.php —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
$apiFile = __DIR__ . '/api.php';
if (file_exists($apiFile)) {
    echo '<p class="success">‚úÖ –§–∞–π–ª api.php —Å—É—â–µ—Å—Ç–≤—É–µ—Ç</p>';
    $success[] = 'api.php –Ω–∞–π–¥–µ–Ω';
} else {
    echo '<p class="error">‚ùå –§–∞–π–ª api.php –ù–ï –Ω–∞–π–¥–µ–Ω!</p>';
    $errors[] = 'api.php –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç';
}

echo '<p>–î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞ API –æ—Ç–∫—Ä–æ–π—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ:</p>';
echo '<ul>';
echo '<li><a href="api.php?action=loadNotes" target="_blank">api.php?action=loadNotes</a></li>';
echo '<li>–î–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å: <code>{"success":true,"notes":[...]}</code></li>';
echo '</ul>';
echo '</div>';

// 5. –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
echo '<div class="check">';
echo '<h2>üìä –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç</h2>';

echo '<h3>‚úÖ –£—Å–ø–µ—à–Ω–æ (' . count($success) . '):</h3>';
if (count($success) > 0) {
    echo '<ul>';
    foreach ($success as $s) {
        echo '<li>' . $s . '</li>';
    }
    echo '</ul>';
}

if (count($warnings) > 0) {
    echo '<h3>‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è (' . count($warnings) . '):</h3>';
    echo '<ul>';
    foreach ($warnings as $w) {
        echo '<li>' . $w . '</li>';
    }
    echo '</ul>';
}

if (count($errors) > 0) {
    echo '<h3>‚ùå –û—à–∏–±–∫–∏ (' . count($errors) . '):</h3>';
    echo '<ul style="color: #ef4444;">';
    foreach ($errors as $e) {
        echo '<li><strong>' . $e . '</strong></li>';
    }
    echo '</ul>';

    echo '<h3>üîß –ö–∞–∫ –∏—Å–ø—Ä–∞–≤–∏—Ç—å:</h3>';
    echo '<pre>chmod 777 data/
chmod 666 data/notes.json</pre>';
} else {
    echo '<h3 class="success">üéâ –í—Å—ë –≤ –ø–æ—Ä—è–¥–∫–µ!</h3>';
    echo '<p>–°–∏—Å—Ç–µ–º–∞ –∑–∞–º–µ—Ç–æ–∫ –¥–æ–ª–∂–Ω–∞ —Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.</p>';
}

echo '</div>';

// 6. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ
echo '<div class="check">';
echo '<h2>üíª –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ</h2>';
echo '<p>PHP –≤–µ—Ä—Å–∏—è: <strong>' . phpversion() . '</strong></p>';
echo '<p>–°–µ—Ä–≤–µ—Ä: <strong>' . $_SERVER['SERVER_SOFTWARE'] . '</strong></p>';
echo '<p>–†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: <code>' . __DIR__ . '</code></p>';
echo '</div>';
?>

<div class="check">
    <h2>üîÑ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏</h2>
    <ol>
        <li>–ï—Å–ª–∏ –µ—Å—Ç—å –æ—à–∏–±–∫–∏ —Å –ø—Ä–∞–≤–∞–º–∏ - –∏—Å–ø—Ä–∞–≤—å—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞</li>
        <li>–û—Ç–∫—Ä–æ–π—Ç–µ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞ (F12)</li>
        <li>–ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ –≤–∫–ª–∞–¥–∫—É "–ó–∞–º–µ—Ç–∫–∏"</li>
        <li>–°–æ–∑–¥–∞–π—Ç–µ –∑–∞–º–µ—Ç–∫—É</li>
        <li>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤ –∫–æ–Ω—Å–æ–ª–∏</li>
        <li>–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É (F5)</li>
        <li>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –∑–∞–≥—Ä—É–∑–∏–ª–∞—Å—å –ª–∏ –∑–∞–º–µ—Ç–∫–∞</li>
    </ol>
</div>

<div class="check">
    <h2>üìû –ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å?</h2>
    <p>–°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —ç—Ç–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É.</p>
</div>
</body>
</html>